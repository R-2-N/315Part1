%option main
digit         [0-9]
alphabetic    [a-zA-Z]
alphanumeric  ({digit}|{alphabetic})
sign          [+-]
%%
;                             printf("SEMICOLON");
!=                            printf("NOT_EQUALS");
!                           printf("NOT");
or                            printf("OR");
and                           printf("AND");
xor                           printf("XOR");
==                            printf("EQUALS");
=                             printf("ASSIGNMENT");
\<                             printf("LESSER");
\<=                            printf("LESSER_EQ");
\>                             printf("LARGER");
\>=                            printf("LARGER_EQ");
%                             printf("MODULUS");
\+                             printf("PLUS");
\-                             printf("MINUS");
\*                             printf("MULTIPLICATION");
\/\/.*                            printf("COMMENT");
\/                             printf("DIVISION");
\(                             printf("LP");
\)                             printf("RP");
\[                             printf("L_ANGLED");
\]                             printf("R_ANGLED");
\{                             printf("LBRACE");
\}                             printf("RBRACE");
(int|string|bool|float|double|char)                           printf("TYPE");
(getHeading|getAltitude|getTime|ascend|descend|verticalStop|moveForward|moveBackward|horizontalStop|turnLeft1Deg|turnRight1Deg|enableSpray|disableSpray|input|output)      printf("PRIMITIVE_FUNCTION");
continue                      printf("CONTINUE");
def                           printf("DEF");
break                         printf("BREAK");
return                        printf("RETURN");
for                           printf("FOR");
while                         printf("WHILE");
do                            printf("DO");
if                            printf("IF");
else                          printf("ELSE");
#.*                           printf("COMMENT");
(true)|(false)                printf("BOOLEAN");
{sign}?{digit}+                printf("INTEGER");
{sign}?{digit}+\.{digit}+     printf("FLOAT");
'.'                           printf("CHAR");
{alphabetic}+{alphanumeric}*  printf("VARIABLE");
\"([^\"\\]*(\\.[^\"\\]*)*)\"                         printf("STRING");


